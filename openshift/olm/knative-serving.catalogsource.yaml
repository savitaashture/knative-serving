kind: ConfigMap
apiVersion: v1
metadata:
  name: serverless-operator

data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: knativeservings.serving.knative.dev
      spec:
        additionalPrinterColumns:
        - JSONPath: .status.version
          name: Version
          type: string
        - JSONPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
          name: Reason
          type: string
        group: serving.knative.dev
        names:
          kind: KnativeServing
          listKind: KnativeServingList
          plural: knativeservings
          singular: knativeserving
          shortNames:
          - ks
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            description: Schema for the knativeservings API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: Spec defines the desired state of KnativeServing
                properties:
                  config:
                    additionalProperties:
                      additionalProperties:
                        type: string
                      type: object
                    description: A means to override the corresponding entries in the upstream
                      configmaps
                    type: object
                type: object
              status:
                description: Status defines the observed state of KnativeServing
                properties:
                  conditions:
                    description: The latest available observations of a resource's current
                      state.
                    items:
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition
                            transitioned from one status to another. We use VolatileTime
                            in place of metav1.Time to exclude this from creating equality.Semantic
                            differences (all other things held constant).
                          type: string
                        message:
                          description: A human readable message indicating details about
                            the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        severity:
                          description: Severity with which to treat failures of this type
                            of condition. When this is not specified, it defaults to Error.
                          type: string
                        status:
                          description: Status of the condition, one of True, False, Unknown.
                          type: string
                        type:
                          description: Type of condition.
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  version:
                    description: The version of the installed release
                    type: string
                type: object
        version: v1alpha1
        versions:
        - name: v1alpha1
          served: true
          storage: true
  clusterServiceVersions: |-
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          alm-examples: '[{"apiVersion":"serving.knative.dev/v1alpha1","kind":"KnativeServing","metadata":{"name":"knative-serving"},"spec":{"config":{"autoscaler":{"container-concurrency-target-default":"100","container-concurrency-target-percentage":"1.0","enable-scale-to-zero":"true","max-scale-up-rate":"10","panic-threshold-percentage":"200.0","panic-window":"6s","panic-window-percentage":"10.0","scale-to-zero-grace-period":"30s","stable-window":"60s","tick-interval":"2s"},"defaults":{"revision-cpu-limit":"1000m","revision-cpu-request":"400m","revision-memory-limit":"200M","revision-memory-request":"100M","revision-timeout-seconds":"300"},"deployment":{"registriesSkippingTagResolving":"ko.local,dev.local"},"gc":{"stale-revision-create-delay":"24h","stale-revision-lastpinned-debounce":"5h","stale-revision-minimum-generations":"1","stale-revision-timeout":"15h"},"logging":{"loglevel.activator":"info","loglevel.autoscaler":"info","loglevel.controller":"info","loglevel.queueproxy":"info","loglevel.webhook":"info"},"observability":{"logging.enable-var-log-collection":"false","metrics.backend-destination":"prometheus"},"tracing":{"enable":"false","sample-rate":"0.1"}}}}]'
          capabilities: Seamless Upgrades
          categories: Networking,Integration & Delivery,Cloud Provider,Developer Tools
          certified: "false"
          containerImage: quay.io/openshift-knative/serverless-operator:v1.0.0
          createdAt: "2019-07-27T17:00:00Z"
          description: |-
            Provides a collection of API's to support deploying and serving
            of serverless applications and functions.
          repository: https://github.com/openshift-knative/serverless-operator
          support: Red Hat
        name: serverless-operator.v1.0.0
        namespace: placeholder
      spec:
        apiservicedefinitions: {}
        customresourcedefinitions:
          owned:
          - description: Represents an installation of a particular version of Knative Serving
            displayName: Knative Serving
            kind: KnativeServing
            name: knativeservings.serving.knative.dev
            statusDescriptors:
            - description: The version of Knative Serving installed
              displayName: Version
              path: version
            version: v1alpha1
        description: |
          The Red Hat Serverless Operator provides a collection of API's to
          install various "serverless" services.
          # Knative Serving
          Knative Serving builds on Kubernetes to support deploying and
          serving of serverless applications and functions. Serving is easy
          to get started with and scales to support advanced scenarios. The
          Knative Serving project provides middleware primitives that
          enable:
          - Rapid deployment of serverless containers
          - Automatic scaling up and down to zero
          - Routing and network programming for Istio components
          - Point-in-time snapshots of deployed code and configurations
          ## Prerequisites
          ### Istio
          Knative requires Istio. A minimal Maistra ControlPlane can be
          installed using the Maistra operator.
          ## Further Information
          For documentation on using Knative Serving, see the
          [serving section](https://www.knative.dev/docs/serving/) of the
          [Knative documentation site](https://www.knative.dev/docs).
        displayName: Serverless Operator
        icon:
        - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
          mediatype: image/svg+xml
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - '*'
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: knative-serving-operator
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - events
                - configmaps
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - replicasets
                verbs:
                - "*"
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - "*"
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - networking.internal.knative.dev
                resources:
                - clusteringresses
                - clusteringresses/status
                - clusteringresses/finalizers
                - ingresses
                - ingresses/status
                - ingresses/finalizers
                verbs:
                - "*"
              - apiGroups:
                - route.openshift.io
                resources:
                - routes
                - routes/custom-host
                - routes/status
                - routes/finalizers
                verbs:
                - "*"
              - apiGroups:
                - serving.knative.dev
                resources:
                - knativeservings
                - knativeservings/finalizers
                verbs:
                - '*'
              serviceAccountName: knative-openshift-ingress
            deployments:
            - name: knative-serving-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: knative-serving-operator
                strategy: {}
                template:
                  metadata:
                    labels:
                      name: knative-serving-operator
                  spec:
                    containers:
                    - command:
                      - knative-serving-operator
                      env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: OPERATOR_NAME
                        value: knative-serving-operator
                      - name: IMAGE_QUEUE
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-queue
                      - name: IMAGE_activator
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-activator
                      - name: IMAGE_autoscaler
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-autoscaler
                      - name: IMAGE_controller
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-controller
                      - name: IMAGE_networking-certmanager
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-certmanager
                      - name: IMAGE_networking-istio
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-istio
                      - name: IMAGE_webhook
                        value: image-registry.openshift-image-registry.svc:5000/knative-serving/knative-serving-webhook
                      image: quay.io/openshift-knative/knative-serving-operator:v0.7.1-TP1-03
                      args:
                        - --filename=https://raw.githubusercontent.com/openshift/knative-serving/release-next/openshift/release/knative-serving-ci.yaml # remove this from individual release branches
                      imagePullPolicy: Always
                      name: knative-serving-operator
                      resources: {}
                    serviceAccountName: knative-serving-operator
            - name: knative-openshift-ingress
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: knative-openshift-ingress
                template:
                  metadata:
                    labels:
                      name: knative-openshift-ingress
                  spec:
                    serviceAccountName: knative-openshift-ingress
                    containers:
                      - name: knative-openshift-ingress
                        image: quay.io/openshift-knative/knative-openshift-ingress:v0.0.8
                        command:
                        - knative-openshift-ingress
                        imagePullPolicy: Always
                        env:
                          - name: WATCH_NAMESPACE
                            value: "" # watch all namespaces for ClusterIngress
                          - name: POD_NAME
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.name
                          - name: OPERATOR_NAME
                            value: "knative-openshift-ingress"
            permissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - get
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - servicemonitors
                verbs:
                - get
                - create
              - apiGroups:
                - apps
                resourceNames:
                - knative-serving-operator
                resources:
                - deployments/finalizers
                verbs:
                - update
              - apiGroups:
                - serving.knative.dev
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: knative-serving-operator
          strategy: deployment
        installModes:
        - supported: false
          type: OwnNamespace
        - supported: false
          type: SingleNamespace
        - supported: false
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        keywords:
        - serverless
        - FaaS
        - microservices
        - scale to zero
        links:
        - name: Documentation
          url: https://developers.redhat.com/topics/serverless-architecture/
        - name: Source Repository
          url: https://github.com/openshift-knative/serverless-operator
        maintainers:
        - email: knative@redhat.com
          name: Serverless Team
        maturity: alpha
        provider:
          name: Red Hat
        version: 1.0.0
  packages: |-
    - packageName: serverless-operator
      channels:
      - name: techpreview
        currentCSV: serverless-operator.v1.0.0
---
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: serverless-operator
spec:
  configMap: serverless-operator
  displayName: Serverless Operator
  publisher: Red Hat
  sourceType: internal
